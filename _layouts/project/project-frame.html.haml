---
layout: project
---
-# layout for pages related to a specific project
-# handles left menu and title display
-# display license
- project_description = site.projects[page.project]
- displayed_series = project_description.release_series.nil? ? nil : project_description.release_series.values.select{|s| s.displayed}

%script
  var displayed_series = [];
  - unless project_description.release_series.nil?
    - project_description.release_series.values.each do |series|
      - unless series.displayed then next end
      displayed_series.push('#{series.version}');

= partial( page.project_banner_partial.nil? ? 'project/banner.html.haml' : page.project_banner_partial, { "real_page" => page } )
= partial( page.project_hero_partial.nil? ? 'project/empty-hero-text.html.haml' : page.project_hero_partial, { "real_page" => page } )

-# Project specific navigation menu
.ui.container.page-content
  .ui.stackable.grid
    .column.three.wide
      .ui.fluid.vertical.menu
        -# removes index.html and then replace download.html to download/
        - current_path = page.output_path.sub(/index\.html$/, "").sub(/\.html$/,"/")
        - project_description.menu.intern.each do |menu|
          -# Active if path is a subpath of the menu item that is not expected to have a more precise entry in the menu.
          -# The project home has to be treated differently as every path is a subpath of home,
          -# and the release menu is also specific since it has sub-entries
          - if menu.releases_submenu || menu.href == "/#{page.project}/"
            - active = current_path == menu.href
          - else
            - active = current_path.start_with?(menu.href)
          - if menu.releases_submenu && !displayed_series.nil? && !displayed_series.empty?
            .ui.dropdown.link.item
              #{menu.name}
              %i.icon.dropdown
              .menu
                %a.item{:href => "#{relative(menu.href)}", :class => "#{(active ? "active" : "")}"}
                  Overview
                - displayed_series.each do |series|
                  - submenu_href = "#{menu.href}#{series.version}/"
                  - submenu_active = current_path.start_with?(submenu_href)
                  %a.item{:href => "#{relative(submenu_href)}", :class => "#{(submenu_active ? "active" : "")}"}
                    = series.version
          - else
            %a.item{:href => "#{relative(menu.href)}", :class => "#{(active ? "active" : "")}"}
              %i.grid.icon{:class => "#{menu.css_class}"}
              #{menu.name}
      .ui.fluid.vertical.menu
        - project_description.menu.extern.each do |menu|
          %a.item{:href => "#{menu.href}", :class => "#{(active ? "active" : "")}"}
            %i.grid.icon{:class => "#{menu.css_class}"}
            #{menu.name}
      %hr
      .license
        Released under the
        %a{:href => "#{project_description.license.url}"}= project_description.license.name 
    .column.thirteen.wide
      ~ content

:javascript
  $(document).ready(function() {
    $('.ui.menu .ui.dropdown').dropdown({ on: 'hover' });
  });
