---
layout: project-standard
project_buttons_partial: project/releases-buttons.html.haml
---
-# Defines the project releases page template
-# Provide get started and download action buttons
-# List releases defined in the project metadata

-# subpages must define a section whose anchor is "supported-version"

-# Metadata from site.yml for the project
- project_description = site.projects[page.project]

.ui.icon.message
  %i.icon.doctor
  .content
    .header
      Interested in commercial support?
    %p
      Check out
      %a{:href => "/#{page.project}/support/"} Red Hat's offering
      \.

%h2 Series
- displayed_series = project_description.release_series.nil? ? nil : project_description.release_series.values.select{|s| s.displayed}
- unless displayed_series.nil? || displayed_series.empty?
  .ui.three.column.doubling.grid.series
    - displayed_series.each do |series|
      - release = series.releases[0]
      .column
        .ui.raised.segment.version
          %span{:class => "ui right ribbon label #{release.stable ? 'green' : 'orange'}"}
            %i.icon{:class => "#{release.stable ? 'check' : 'settings'}"}
            #{release.stable ? 'stable' : 'development'}
          %h3.ui.header
            = series.version
            %small
              = release.date
          %p= series.summary
          .ui.right.aligned.basic.segment
            %a.ui.right.labeled.icon.button.primary
              %i.right.arrow.icon
              More info
- else
  %p There are no releases configured for this project.

- nexus_search = project_description.maven.nexus_search
%p
  Older series can be found
  %a{:href => "#{project_description.sourceforge_url}"}
    on SourceForge
  or in JBoss's
  %a{:href => jboss_nexus_search_url(nexus_search.group_id_pattern, nexus_search.artifact_id_pattern, nil)}<
    Maven repository.
- unless project_description.integrations.nil?
  %h2 Compatibility matrix
  %table.ui.table.stackable.celled.striped
    %thead
      %tr
        %th
          = project_description.name
        - project_description.release_series.values.each do |series|
          - unless series.displayed then next end
          %th
            = series.version
    %tbody
      - project_description.integrations.each_pair do |integration_id, integration|
        %tr
          %td
            %a{:href => "#{integration['url']}"}
              = integration["name"]
          - project_description.release_series.values.each do |series|
            - unless series.displayed then next end
            - constraint = series.integration_constraints[integration_id]
            %td
              - if constraint == nil
                N/A
              - else
                #{constraint.version}
~ content
